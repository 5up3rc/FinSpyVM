* 9D popf
* 61 popa
* 68 push ...
* DWORD: EDI+0xD
* 68 push ...
* DWORD: fixed-up base operand 0x7FB4 + 0x400000
* C3 ret
* 68 push ...
* DWORD: [ebx+VMContext.pCurrInsn]+0x18 (current VM instruction + sizeof(VMInstr))
* 60 pusha
* 9C pushf
* 68 push ...
* DWORD: ebx
* 5B pop ebx
* 68 push ...
* DWORD: [ebx+0x14] (unknown VM exit sequence)
* C3 ret

Restore saved ESP
Jump into the code above

.text:00403464     mov     edi, [ebx+VMContext.pScratch]             ; EDI := dynamically generated code stack                  
.text:00403571     add     dword ptr [ebx+VMContext.pScratch], 30h   ; Grow the stack upward by 0x30 so we don't get overwritten
.text:00403565     lea     ecx, [ebx+VMContext.CurrentInsn.InsnData] ; Stupid obfuscation                                       
.text:00403525     mov     eax, [ecx+4]   ; 0x7FB4                   ; In total, write 9D 61 (popf/popa)                        
.text:004035A1     add     eax, [ebx+VMContext.dwBaseAddress] ; Base address fixup
.text:004034CD     push    edi
.text:004036B6     mov     word ptr [edi], 503Fh
.text:004034DC     xor     word ptr [edi], 31A2h  ==> 9D 61
.text:004034FA     mov     byte ptr [edi+2], 0C2h
.text:00403513     xor     byte ptr [edi+2], 0AAh ==> 68
.text:004034C3     lea     edx, [edi+0Dh]
.text:004034AF     add     edi, 3
.text:0040364A     mov     [edi], edx
.text:0040367F     sub     edi, 3
.text:0040354D     mov     dword ptr [edi+7], 0A3h
.text:004035C7     xor     byte ptr [edi+7], 0CBh
.text:004036D8     add     edi, 8
.text:004035E3     mov     [edi], eax
.text:00403591     sub     edi, 8
.text:004036A3     mov     byte ptr [edi+0Ch], 0F2h
.text:00403455     xor     byte ptr [edi+0Ch], 31h
.text:00403489     add     edi, 0Dh
.text:0040368F     mov     byte ptr [edi], 68h
.text:004035D9     mov     eax, [ebx+VMContext.pCurrInsn]
.text:00403657     add     eax, 18h
.text:0040365F     mov     [edi+1], eax
.text:0040361D     add     edi, 5
.text:00403440     mov     word ptr [edi], 0FE77h
.text:004036EE     xor     word ptr [edi], 6217h
.text:00403642     add     edi, 2
.text:0040366B     mov     byte ptr [edi], 2Dh
.text:00403538     xor     byte ptr [edi], 45h
.text:004035FB     mov     [edi+1], ebx
.text:0040352D     add     edi, 5
.text:0040357C     mov     byte ptr [edi], 84h
.text:004036C8     xor     byte ptr [edi], 0DFh
.text:0040360C     inc     edi
.text:0040349C     mov     eax, [ebx+VMContext.fpVMReEntryToVMInstructionPtr]
.text:0040362E     mov     byte ptr [edi], 40h
.text:00403478     xor     byte ptr [edi], 28h
.text:0040351D     mov     [edi+1], eax
.text:00403507     add     edi, 5
.text:0040355D     mov     byte ptr [edi], 92h
.text:004035B6     xor     byte ptr [edi], 51h
.text:00403700     pop     edi
.text:004034EA     mov     esp, [ebx+VMContext.SavedESP1]
.text:004035EA     jmp     edi
